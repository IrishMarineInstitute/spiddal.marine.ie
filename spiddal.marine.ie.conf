# You may add here your
# server {
#    ...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# NB: We do not do caching here, but will do so at the frontend server.
lua_package_path '/home/dmuser/sites/spiddal.marine.ie/lua/?.lua;;';
server {
    listen 8001 default_server;
    listen [::]:8001 default_server ipv6only=on;

    root /home/dmuser/sites/spiddal.marine.ie/html;
    index index.html index.htm;

    # Make site accessible from http://localhost/
    server_name spiddal.marine.ie;

    location /spidvid/hls/ {
            proxy_pass http://172.16.255.19/hls/;
    }

    location /spidvid/dash/ {
            proxy_pass http://172.16.255.19/dash/;
    }

    location / {
        if ($arg_SERVICE = SOS){
                   rewrite ^ /service/SOS?ACCEPTVERSIONS=$arg_ACCEPTVERSIONS&OFFERING=$arg_OFFERING&REQUEST=$arg_REQUEST;
        }
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
        # Uncomment to enable naxsi on this location
        # include /etc/nginx/naxsi.rules
    }
    location /data/ {
        root /;
        autoindex on;
        add_header 'Access-Control-Allow-Origin' '*';
    try_files $uri $uri/ =404;
    }


    location /service/SOS {
        if ($arg_ACCEPTVERSIONS = 1.0.0){
            rewrite ^ /service/SOS/acceptversions/v1d0d0?REQUEST=$arg_REQUEST&OFFERING=$arg_OFFERING;
        }
    }
    
    location /service/SOS/acceptversions/v1d0d0 {
        if ($arg_REQUEST = GetCapabilities){
            rewrite ^ /service/SOS/acceptversions/v1d0d0/request/getcapabilities;
        }
        if ($arg_REQUEST = GetObservation){
            rewrite ^ /service/SOS/acceptversions/v1d0d0/request/getobservation/offering/$arg_OFFERING;
        }
        if ($arg_REQUEST = DescribeSensor){
            rewrite ^ /service/SOS/acceptversions/v1d0d0/request/describesensor/procedure/$arg_PROCEDURE;
        }
    }

    location /service/SOS/acceptversions/v1d0d0/request/getcapabilities {
        add_header Content-Type text/xml;
        try_files /sensor-observation-service/xml/capabilities.xml =404;
    }
    #
    #    The following location directives deal with processing specific 
    #    GetObservation requests
    #    
    location /service/SOS/acceptversions/v1d0d0/request/getobservation/offering/ie.marine.data:idronaut.oceanseven.304.XXXX {
        content_by_lua "
            local res = ngx.location.capture('/data/spiddal-ctd.json')
            if res then
                if res.status >= 500 then 
                   ngx.exit(res.status) 
                end
                ngx.header.content_type = 'application/json'
                local om_member_measurement = require('om_member_measurement')
                local JSON = require('JSON')
                local decodedCTD = JSON:decode(res.body)
                local omCTD = {}
                omCTD['id'] = 'http://data.marine.ie/ctd/Idronaut/3137/' .. string.gsub(decodedCTD['Timestamp'],'[^0-9]','')
                omCTD['foi'] = {}
                omCTD['foi']['href'] = 'http://example.marine.ie/feature/galwayBayCableObservatory'
                omCTD['phenomenonTime'] = {}
                omCTD['phenomenonTime']['instant'] = decodedCTD['Timestamp']
                
                local localTemperCTD = {}
                localTemperCTD = om_member_measurement.om_member_measurement('Temp',decodedCTD['Temp'],'http://vocab.nerc.ac.uk/collection/P06/current/UPAA/','http://vocab.nerc.ac.uk/collection/L22/current/TOOL0861/','http://vocab.nerc.ac.uk/collection/P01/current/TEMPPR01/', decodedCTD['Timestamp'])
    
                local localSalCTD = {}
                localSalCTD = om_member_measurement.om_member_measurement('Sal',decodedCTD['Sal'],'http://vocab.nerc.ac.uk/collection/P06/current/UUUU/','http://vocab.nerc.ac.uk/collection/L22/current/TOOL0861/','http://vocab.nerc.ac.uk/collection/P01/current/PSALCU01/', decodedCTD['Timestamp'])
    
                local localPressCTD = {}
                localPressCTD = om_member_measurement.om_member_measurement('Press',decodedCTD['Press'],'http://vocab.nerc.ac.uk/collection/P06/current/UPDB/','http://vocab.nerc.ac.uk/collection/L22/current/TOOL0861/','http://vocab.nerc.ac.uk/collection/P07/current/CFSN0330/', decodedCTD['Timestamp'])
                
                local localSoundvCTD = {}
                localSoundvCTD = om_member_measurement.om_member_measurement('SoundV',decodedCTD['SoundV'],'http://vocab.nerc.ac.uk/collection/P06/current/UVAA/','http://vocab.nerc.ac.uk/collection/L22/current/TOOL0861/','http://vocab.nerc.ac.uk/collection/P01/current/SVELCV01/', decodedCTD['Timestamp'])
                
                local localCondCTD = {}
                localCondCTD = om_member_measurement.om_member_measurement('Cond',decodedCTD['Cond'],'http://vocab.nerc.ac.uk/collection/P06/current/UECA/','http://vocab.nerc.ac.uk/collection/L22/current/TOOL0861/','http://vocab.nerc.ac.uk/collection/P01/current/CNDCST01/', decodedCTD['Timestamp'])
                
                omCTD['member'] = {localTemperCTD, localSalCTD, localPressCTD, localSoundvCTD, localCondCTD} 
                
                ngx.print(JSON:encode_pretty(omCTD))
            end
        ";
    }
        
    location /service/SOS/acceptversions/v1d0d0/request/getobservation/offering/ie.marine.data:instrument:wetlabs.ecoflntu.3137 {
        content_by_lua "
            local res = ngx.location.capture('/data/spiddal-fluorometer.json')
            if res then
                if res.status >= 500 then 
                   ngx.exit(res.status) 
                end
                ngx.header.content_type = 'application/json'
                local om_member_measurement = require('om_member_measurement')
                local JSON = require('JSON')
                local decodedFluoro = JSON:decode(res.body)
                local omFluoro = {}
                omFluoro['id'] = 'http://data.marine.ie/fluorometer/WetLabs-ECO-FLNTU/3137' .. string.gsub(decodedFluoro['Timestamp'],'[^0-9]','')
                omFluoro['foi'] = {}
                omFluoro['foi']['href'] = 'http://example.marine.ie/feature/galwayBayCableObservatory'
                omFluoro['phenomenonTime'] = {}
                omFluoro['phenomenonTime']['instant'] = decodedFluoro['Timestamp']
                
                local localChlCountFluoro = {}
                localChlCountFluoro = om_member_measurement.om_member_measurement('CHLCount',decodedFluoro['CHLCount'],'http://vocab.nerc.ac.uk/collection/P06/current/UUUU/','http://vocab.nerc.ac.uk/collection/L22/current/TOOL0215/','http://vocab.nerc.ac.uk/collection/P01/current/FCNTRW01/',decodedFluoro['Timestamp'])
                
                local localTurbCountFluoro = {}
                localTurbCountFluoro = om_member_measurement.om_member_measurement('TurbCount',decodedFluoro['NTUCount'],'http://vocab.nerc.ac.uk/collection/P06/current/UUUU/','http://vocab.nerc.ac.uk/collection/L22/current/TOOL0215/','http://vocab.nerc.ac.uk/collection/P01/current/NVLTOBS1/',decodedFluoro['Timestamp'])
                
                local localChlFluoro = {}
                localChlFluoro = om_member_measurement.om_member_measurement('CHLConcentration',decodedFluoro['CHLCount'],'http://vocab.nerc.ac.uk/collection/P06/current/UGPL/','http://vocab.nerc.ac.uk/collection/L22/current/TOOL0215/','http://vocab.nerc.ac.uk/collection/P01/current/CPHLPR01/',decodedFluoro['Timestamp'])
                
                local localTurbFluoro = {}
                localTurbFluoro = om_member_measurement.om_member_measurement('Turbidity',decodedFluoro['CHLCount'],'http://vocab.nerc.ac.uk/collection/P06/current/USTU/','http://vocab.nerc.ac.uk/collection/L22/current/TOOL0215/','http://vocab.nerc.ac.uk/collection/P01/current/TURBXXXX/',decodedFluoro['Timestamp'])
                
                omFluoro['member'] = {localChlCountFluoro,localTurbCountFluoro,localChlFluoro,localTurbFluoro} 
                
                ngx.print(JSON:encode_pretty(omFluoro))
           end
        ";
    }
    
    #
    # DescribeSensor locations
    #
    
    location /service/SOS/acceptversions/v1d0d0/request/describesensor/procedure/ie.marine.data:instrument:teledynerdi-workhorse600-1323 {
        add_header Content-Type text/xml;
        try_files /sensor-observation-service/xml/trdi-wh600-1323.xml =404;
    }
    
    location /service/SOS/acceptversions/v1d0d0/request/describesensor/procedure/ie.marine.data:instrument:idronaut.oceanseven.304 {
        add_header Content-Type text/xml;
        try_files /sensor-observation-service/xml/ioceanseven-304.xml =404;
    }
    
    location /service/SOS/acceptversions/v1d0d0/request/describesensor/procedure/ie.marine.data:instrument:idronaut.oceanseven.304.XXXX {
        add_header Content-Type text/xml;
        try_files /sensor-observation-service/xml/ioceanseven-304-hash-something.xml =404;
    }
    
    location /service/SOS/acceptversions/v1d0d0/request/describesensor/procedure/ie.marine.data:instrument:wetlabs.ecoflntu {
        add_header Content-Type text/xml;
        try_files /sensor-observation-service/xml/wetlabs-ecoflntu.xml =404;
    }
    
    location /service/SOS/acceptversions/v1d0d0/request/describesensor/procedure/ie.marine.data:instrument:wetlabs.ecoflntu.3137 {
        add_header Content-Type text/xml;
        try_files /sensor-observation-service/xml/wetlabs-ecoflntu-3137.xml =404;
    }

}

